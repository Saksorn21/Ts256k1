name: CI/CD Data Collection
permissions:
  contents: write 
  
on:
  push:
    branches:
      - testing
  pull_request:
    branches:
      - testing

jobs:
  collect-data:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - run: npm ci

      - name: Nyren Run Testing by, jest-ts
        run: npm run test
      - name: Node Testing
        run: npm test -- --json --outputFile=coverage/tests-results.json
      - name: Format JSON with jq
        run: |
          sudo apt-get install jq
          jq . coverage/tests-results.json > coverage/nyren-tests-results.json
      - name: Create README coverage report
        run: |
          echo "# Nyren Coverage Report" > coverage/README.md
          echo "## Summary <sub>$(date '+%Y-%m-%d %H:%M:%S')</sub>" >> coverage/README.md
          echo "- **Total Tests:** $(jq '.numTotalTests' coverage/nyren-tests-results.json)" >> coverage/README.md
          echo "- **Passed Tests:** $(jq '.numPassedTests' coverage/nyren-tests-results.json)" >> coverage/README.md
          echo "- **Failed Tests:** $(jq '.numFailedTests' coverage/nyren-tests-results.json)" >> coverage/README.md
          echo "## Details" >> coverage/README.md
          echo "- [Link to JSON results](nyren-tests-results.json)" >> coverage/README.md
      - name: Check coverage directory
        run: ls coverage
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: coverage/nyren-tests-results.json
      - name: Commit and push changes
        run: |
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git add coverage/nyren-tests-results.json
          git add coverage/clover.xml
          git add coverage/coverage-final.json
          git add coverage/README.md
          git commit -m "Add test coverage reports $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin testing 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  
  merge-to-main:
    needs: collect-data  
    runs-on: ubuntu-latest
    if: success()  

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main  
          fetch-depth: 0  

      - name: Fetch testing branch
        run: git fetch origin testing

      - name: Checkout main and pull latest changes
        run: |
          git checkout main
          git pull origin main

      - name: Merge testing into main
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git merge origin/testing

      - name: Push changes to main
        run: git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
